
api_key1="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"







# from openai import OpenAI
# client = OpenAI()
#
# response = client.chat.completions.create(
#     messages=[{
#         "role": "user",
#         "content": "Say this is a test",
#     }],
#     model="gpt-4o-mini",
# )

# print(response._request_id)



from openai import OpenAI
# client = OpenAI()
#
# response = client.chat.completions.with_raw_response.create(
#     messages=[{
#         "role": "user",
#         "content": "Say this is a test",
#     }],
#     model="gpt-4o-mini",
# )
# print(response.headers.get('x-ratelimit-limit-tokens'))
#
# # get the object that `chat.completions.create()` would have returned
# completion = response.parse()
# print(completion)


from openai import OpenAI

# 加载 .env 文件到环境变量

client = OpenAI(api_key=api_key)
# 消息
messages = [
  {
    "role": "system",
    "content": "这门课每周二、四、日上课。"
  },
  {
    "role": "user",
    "content": "周末上课吗？"  # 问问题。
  },

]

# 调用 GPT-3.5
chat_completion = client.chat.completions.create(
  model="gpt-4o-mini",
  messages=messages
)

# 输出回复
print(chat_completion.choices[0].message.content)

